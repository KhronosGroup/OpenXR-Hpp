# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - master

jobs:
  - job: build
    pool:
      vmImage: "ubuntu-latest"
    # container: khronosgroup/docker-images:openxr-sdk

    steps:
      - script: |
          sudo apt-get update
          sudo apt-get install -y libgtest-dev clang-format
        displayName: 'Install required packages'

      - script: |
          pushd ..
          git clone https://github.com/KhronosGroup/OpenXR-SDK-Source.git
          popd
        displayName: "Clone OpenXR-SDK-Source"

      - script: ./generate-openxr-hpp.sh
        displayName: "Generate header"

      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: "$(Build.SourcesDirectory)/include/openxr/*.hpp"
          artifact: "openxr-hpp-header"
          publishLocation: "pipeline"

      # - script: |
      #     pushd ../OpenXR-SDK-Source
      #     mkdir build
      #     pushd build
      #     cmake .. -GNinja -DBUILD_API_LAYERS=OFF -DBUILD_TESTS=OFF
      #     ninja
      #     popd
      #     popd
      #   displayName: "Build OpenXR-SDK-Source"

      # - script: |
      #     mkdir build
      #     cd build
      #     cmake .. -GNinja -DSKIP_EZVCPKG=TRUE
      #     ninja
      #   displayName: "Build OpenXR-Hpp"
